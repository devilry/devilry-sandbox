<?xml version="1.0" encoding="UTF-8"?>
<project>
	<parent>
		<artifactId>devilry-sandbox-ejb
		</artifactId>
		<groupId>org.devilry</groupId>
		<version>0.1</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.devilry</groupId>
	<artifactId>
		devilry-sandbox-ejb-openejb_stateful_entity
	</artifactId>
	<name>
		devilry :: sandbox :: ejb :: openejb :: stateful entity
	</name>
	<version>0.1</version>


	<dependencies>

		<dependency>
			<groupId>org.apache.openejb</groupId>
			<artifactId>javaee-api</artifactId>
			<version>5.0-1</version>
			<scope>provided</scope>
		</dependency>

		<!--
			The <scope>test</scope> guarantees that non of your runtime code is
			dependent on any OpenEJB classes.
		-->
		<dependency>
			<groupId>org.apache.openejb</groupId>
			<artifactId>openejb-core</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>




<build>
  <plugins>
    <!-- this configures the surefire plugin to run your tests with the javaagent enabled -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <configuration>
        <forkMode>pertest</forkMode>
        <argLine>-javaagent:${basedir}/target/openejb-javaagent-3.1.jar</argLine>
        <workingDirectory>${basedir}/target</workingDirectory>
      </configuration>
    </plugin>

    <!-- this tells maven to copy the openejb-javaagent jar into your target/ directory -->
    <!-- where surefire can see it -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-dependency-plugin</artifactId>
      <executions>
        <execution>
          <id>copy</id>
          <phase>process-resources</phase>
          <goals>
            <goal>copy</goal>
          </goals>
          <configuration>
            <artifactItems>
              <artifactItem>
                <groupId>org.apache.openejb</groupId>
                <artifactId>openejb-javaagent</artifactId>
                <version>3.1</version>
                <outputDirectory>${project.build.directory}</outputDirectory>
              </artifactItem>
            </artifactItems>
          </configuration>
        </execution>
      </executions>
    </plugin>

  </plugins>
</build>



</project>
